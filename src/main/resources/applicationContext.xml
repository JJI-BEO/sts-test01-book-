<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
<!-- 	<bean id="log" class="com.springbook.biz.common.LogAdvice"> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="before" class="com.springbook.biz.common.beforeAdvice"></bean> -->
	
<!-- 	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean>	 -->
		
<!-- 	<bean id="AfterThrowingAdvice" class="com.springbook.biz.common.afterThrowingAdvice"></bean> -->

<!-- 	<bean id="AfterAdvice" class="com.springbook.biz.common.AfterAdvice"></bean> -->

		<bean id="Aroud" class="com.springbook.biz.common.AroundAdvice"></bean>
		
	<aop:config>
<!-- 		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/> -->
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/>
			
			
			
			<!-- 실행 이전에 -->
<!-- 		<aop:aspect ref="AfterThrowingAdvice"> -->
<!-- 			<aop:before method="before()" pointcut-ref="allPointcut"/> -->
			
			<!-- 리턴이 일어난 후에  -->
<!-- 			<aop:after-returning method="afterLog()" pointcut-ref="getPointcut"/> -->
			
			<!-- 예외처리가 일어난 후에 -->
<!-- 			<aop:after-throwing method="exceptionLog" pointcut-ref="allPointcut"/> -->
<!-- 		</aop:aspect> -->
			
			<!-- 실행 이후에 -->
<!-- 		<aop:aspect ref="AfterAdvice"> -->
<!-- 			<aop:after method="finallyLog" pointcut-ref="allPointcut"/> -->
<!-- 		</aop:aspect> -->

		<aop:aspect ref="Aroud">
			<aop:around method="aroundLog" pointcut-ref="getPointcut" />
		</aop:aspect>
	</aop:config>
	
		
	<!-- 오토와이어드 쓰면 이거 안써도댐 -->
<!-- 	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl"> -->
<!-- 		<property name="userDAO" ref="userDAO"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->
	
<!-- 	<context:component-scan base-package="polymorphism"></context:component-scan> -->
	
	<!-- <bean id="samsungTV" class="polymorphism.SamsungTV" >scope="prototype"
		<constructor-arg ref="apple"></constructor-arg>
		<constructor-arg value="270000"></constructor-arg>

		<property name="speaker" ref="apple"></property>
		<property name="price" value="27000"></property>
	</bean> 
	<bean id="lgTV" class="polymorphism.LgTV">
	</bean>
	
	<bean id="sony" class="polymorphism.SonySpeaker">
	</bean>
	
	<bean id="apple" class="polymorphism.AppleSpeaker">
	</bean>
	
	<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean">
		<property name="addressList">
			<list>
				<value>서울 강남구</value>
				<value>서울시 영등포구</value>
			</list>
				<set value-type="java.lang.String">
					<value>서울시 강남구</value>
					<value>서울시 영등포구</value>
				</set>
				<map>
					<entry>
						<key><value>고길동</value></key>
						<value>서울시 강남구</value>
					</entry>
					<entry>
						<key><value>홍길동</value></key>
						<value>서울시 영등포구</value>
					</entry>
				</map>
					<props>
						<prop key="고길동">서울시 강남구</prop>
						<prop key="홍길동">서울시 영등포구</prop>
					</props>
		</property>
	</bean> -->
	
</beans>
